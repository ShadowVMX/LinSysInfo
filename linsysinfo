#!/bin/bash
#
##########################
#			 #
# SysInfo para Intrusión #
#	ShadowVMX	 #
##########################
#
#
#Desarrollado por ShadowVMX para tratar de vulnerar aún más el sistema una vez estemos dentro.
#
#

#Trap del ctrl_c


trap exitSys SIGINT

exitSys(){
	echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Saliendo, espere..."
	sleep 1.5
	exit
}


echo "$(tput setaf 153)"; figlet sysinfo 
echo " "
echo "$(tput setaf 112)                 @ShadowVMX v2.0"
echo " "
echo "$(tput setaf 8) "

#Información del Kernel

echo " "
echo "___________________________________________________"
echo "___________________________________________________"
echo " "

echo -n "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Script ejecutado por --> $(tput setaf 3)" && whoami && echo "$(tput setaf 8)"

echo "___________________________________________________"
echo " "
echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Kernel Version: "
echo "$(tput setaf 2) "
uname -a
echo " "
echo " "
uname -r
echo " "
echo " "
cat /etc/issue
echo " "
echo " "
cat /etc/*-release
echo " "
echo " "
cat /proc/version
echo " "
echo " "
dmesg | grep "Linux"
echo " "
echo " "
ls /boot | grep vmlinuz-
echo "$(tput setaf 8) "

#Información acerca de la CPU
sleep 1.5

echo "___________________________________________________"
echo " "
echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]CPU Model & CPU Speed: "
echo "$(tput setaf 2) "
lscpu | grep "Model name:"
echo " "
inxi | grep "CPU:"
echo " "
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Información acerca de la SHELL Actual
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Variables de entorno: "
echo "$(tput setaf 2) "
env 2>/dev/null | grep -v 'LS_COLORS' 2>/dev/null
echo " "
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Información sobre variables y carpetas de ejecución
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Variables de entorno complementarias: "
echo "$(tput setaf 2) "
echo $PATH
echo " "
ls -ld 2> /dev/null $(echo $PATH | tr ":" " ")
echo " "
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "


#Memoria usada por los discos duros
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Memoria usada (HDD|SSD): "
echo "$(tput setaf 2) "
inxi | grep "Storage: " | cut -d " " -f1,2,3,4,5
echo " "
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Información de la memoria RAM
sleep 1.5


echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Memoria RAM: "
echo "$(tput setaf 2) "
free -h
echo " "
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Servicios actuales activos
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Servicios actuales levantados: "
echo "$(tput setaf 2) "
service --status-all | grep "+"
echo " "
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Servicios vulnerables posibles
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Servicios vulnerables posibles: "
echo "$(tput setaf 2) "

cat /etc/syslog.conf &> /dev/null

if [[ $? == 0 ]] ; then
	echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]syslog.conf"
	echo "$(tput setaf 2)"
	cat /etc/syslog.conf
else
	:
fi
echo " "
echo " "
cat /etc/chttp.conf &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]chttp.conf"
        echo "$(tput setaf 2)"
	cat /etc/chttp.conf
else
        :
fi

echo " "
echo " "
cat /etc/lighttpd.conf &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]lighttpd.conf"
        echo "$(tput setaf 2)"
	cat /etc/lighttpd.conf
else
        :
fi


echo " "
echo " "
cat /etc/cups/cupsd.conf &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]cupsd.conf"
	echo "$(tput setaf 2)"
        cat /etc/cups/cupsd.conf
else
        :
fi


echo " "
echo " "
cat /etc/inetd.conf &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]inetd.conf"
	echo "$(tput setaf 2)"
        cat /etc/inetd.conf
else
        :
fi


echo " "
echo " "
cat /etc/apache2/apache2.conf &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]apache2.conf"
	echo "$(tput setaf 2)"
        cat /etc/apache2/apache2.conf
else
        :
fi


echo " "
echo " "
cat /etc/my.conf &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]myconf.conf"
	echo "$(tput setaf 2)"
	cat /etc/my.conf
else
        :
fi


echo " "
echo " "
cat /etc/httpd/conf/httpd.conf &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]httpd.conf"
        echo "$(tput setaf 2)"
	cat /etc/httpd/conf/httpd.conf
else
        :
fi


echo " "
echo " "
cat /opt/lampp/etc/httpd.conf &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]lampp/httpd.conf"
	echo "$(tput setaf 2)"
        cat /opt/lampp/etc/httpd.conf
else
        :
fi


echo " "
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "


#Capabilities actuales en el sistema
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Capabilities: "
echo "$(tput setaf 2) "
getcap -r / 2> /dev/null 
echo " "
echo "--> GTFOBins (https://gtfobins.github.io/)"
echo " "
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Permisos SUID
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Permisos SUID: "
echo "$(tput setaf 2)"
find . / -perm /4000 2> /dev/null
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Permisos GUID
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Permisos GUID: "
echo "$(tput setaf 2)"
find . / -perm /2000 2> /dev/null
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Grupos con el ID
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]ID (grupos): "
echo "$(tput setaf 2)"
id
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Permisos en ejecución con sudo -l
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Permisos de ejecución del usuario actual: "
echo "$(tput setaf 2)"
sudo -l
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Leer el /etc/passwd
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Acceso al /etc/passwd: "
echo "$(tput setaf 2)"
cat /etc/passwd
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Leer el /etc/shadow
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Acceso al /etc/shadow: "
echo "$(tput setaf 2)"
cat /etc/shadow &> /dev/null 

if [[ $? == 1 ]] ; then
	echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]No podemos leer /etc/shadow"
else
	cat /etc/shadow
fi
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Leer el directorio de root
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Acceso al directorio de root: "
echo "$(tput setaf 2)"
lsd -la /root/ 2> /dev/null

if [[ $? == 1 ]] ; then
	echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]No tenemos permiso para acceder."
else
	lsd -la /root/ 
fi
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Visualizar las conexiones TCP
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Listando las conexiones TCP: "
echo "$(tput setaf 2)"
ss -t
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Visualizar las conexiones UDP
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Listando las conexiones UDP: "
echo "$(tput setaf 2)"
ss -ua
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Visualizar los procesos actuales en el sistema
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Listando los procesos actuales en el sistema: "
echo "$(tput setaf 2)"
ps aux
echo " "
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Listando los procesos exclusivos que se llevan a cabo por root: "
echo "$(tput setaf 2)"
ps aux | grep root
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Visualizar la característica ARP
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]ARP: "
echo "$(tput setaf 2)"
arp
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Información de Networking
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Direcciones IP en el sistema: "
echo "$(tput setaf 2)"
ifconfig
echo " "
echo " "
ip a 
echo " "
echo " "
echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]resolv.conf"
echo "$(tput setaf 2)"
cat /etc/resolv.conf 2> /dev/null
echo " "
echo " "
echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Sysconfig/Network"
echo "$(tput setaf 2)"
cat /etc/sysconfig/network 2> /dev/null
echo " "
echo " "
echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Networks"
echo "$(tput setaf 2)"
cat /etc/networks 2> /dev/null
echo " "
echo " "
echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Iptables"
echo "$(tput setaf 2)"
iptables -L
echo " "
echo " "
echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Hostname"
echo "$(tput setaf 2)"
hostname
echo " "
echo " "
echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]DNSDomainName"
echo "$(tput setaf 2)"
dnsdomainname

echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "


#Usuarios conectados actualmente
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Usuarios conectados actualmente al sistema: "
echo "$(tput setaf 2)"
w
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Claves públicas o privadas
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Claves públicas y privadas del SSH: "
echo "$(tput setaf 2)"

cat ~/.ssh/authorized_keys &> /dev/null

if [[ $? == 0 ]] ; then	
	echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh authorized_keys: $(tput setaf 2)" 
	cat ~/.ssh/authorized_keys
else
	:
fi

echo ""
cat ~/.ssh/identity.pub &> /dev/null

if [[ $? == 0 ]] ; then
	echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh identity.pub: $(tput setaf 2)" 
	cat ~/.ssh/identity.pub
else
	:
fi

echo " "
cat ~/.ssh/identity &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh identity: $(tput setaf 2)" 
        cat ~/.ssh/identity.
else
        :
fi

echo " "
cat ~/.ssh/id_rsa.pub &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh id_rsa.pubg: $(tput setaf 2)" 
        cat ~/.ssh/id_rsa.pub
else
        :
fi

echo " "
cat ~/.ssh/id_rsa &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh id_rsa: $(tput setaf 2)" 
        cat ~/.ssh/id_rsa
else
        :
fi

echo " "
cat ~/.ssh/id_dsa.pub &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh id_dsa.pub: $(tput setaf 2)" 
        cat ~/.ssh/id_dsa.pub
else
        :
fi

echo " "
cat ~/.ssh/id_dsa &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh id_dsa: $(tput setaf 2)" 
        cat ~/.ssh/id_dsa
else
        :
fi

echo " "
cat /etc/ssh/ssh_config &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh_config: $(tput setaf 2)" 
        cat /etc/ssh/ssh_config
else
        :
fi

echo " "
cat /etc/ssh/sshd_config &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]sshd_config: $(tput setaf 2)" 
        cat /etc/ssh/sshd_config
else
        :
fi

echo " "
cat /etc/ssh/ssh_host_dsa_key.pub &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh_host_dsa_key.pubg: $(tput setaf 2)" 
        cat /etc/ssh/ssh_host_dsa_key.pub
else
        :
fi

echo " "
cat /etc/ssh/ssh_host_dsa_key &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh_host_dsa_key: $(tput setaf 2)" 
        cat /etc/ssh/ssh_host_dsa_key
else
        :
fi

echo " "
cat /etc/ssh/ssh_host_rsa_key.pub &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh_host_rsa_key.pub: $(tput setaf 2)" 
        cat /etc/ssh/ssh_host_rsa_key.pub
else
        :
fi

echo " "
cat /etc/ssh/ssh_host_rsa_key &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh_host_rsa_key: $(tput setaf 2)" 
        cat /etc/ssh/ssh_host_rsa_key
else
        :
fi

echo " "
cat /etc/ssh/ssh_host_key.pub &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh_host_key_pub: $(tput setaf 2)" 
        cat /etc/ssh/ssh_host_key.pub
else
        :
fi

echo " "
cat /etc/ssh/ssh_host_key &> /dev/null

if [[ $? == 0 ]] ; then
        echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]ssh_host_key: $(tput setaf 2)" 
        cat /etc/ssh/ssh_host_key
else
        :
fi

echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Se permite el login de root por SSH
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Conexión vía SSH: "
echo "$(tput setaf 2)"

cat /etc/ssh/sshd_config | grep "PermitRootLogin yes" &> /dev/null

if [[ $? == 0 ]] ; then
	echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Conexión posible --> [PermitRootLogin Yes]"
else
	echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Conexión no posible --> [PermitRootLogin No]"
fi
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Shells disponibles en el sistema
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Shells disponibles: "
echo "$(tput setaf 2)"
cat /etc/shells
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Información acerca de las contraseñas del sistema
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Información acerca de las contraseñas: "
echo "$(tput setaf 2)"
cat /etc/login.defs | grep "^PASS_MAX_DAYS\|^PASS_MIN_DAYS\|^PASS_WARN_AGE\|^ENCRYPT_METHOD"
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "


#Información acerca de las tareas cron
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Información acerca de las tareas cron: "
echo "$(tput setaf 2)"

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]cron.d: "
echo "$(tput setaf 2)"

lsd -ll /etc/cron.d/
echo " "
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]crontab: "
echo "$(tput setaf 2)"


cat /etc/crontab 
echo " "
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]cron.daily: "
echo "$(tput setaf 2)"

lsd -ll /etc/cron.daily/
echo " "
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]crontabs/spools: "
echo "$(tput setaf 2)"

lsd -al /var/spool/cron/crontabs/
echo " "
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]cron.hourly: "
echo "$(tput setaf 2)"

lsd -al /etc/cron.hourly/
echo " "
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]cron.monthly: "
echo "$(tput setaf 2)"

lsd -al /etc/cron.monthly/
echo " "
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]cron.weekly: "
echo "$(tput setaf 2)"

lsd -al /etc/cron.weekly/
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Versión de los distintos componentes (sudo)
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Versión del sudo: "
echo "$(tput setaf 2)"
sudo -V | grep "version"
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Versión de apache2
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Versión de apache2: "
echo "$(tput setaf 2)"
apache2 -v
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#MySQL version
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Versión de MySQL: "
echo "$(tput setaf 2)"

ls -l /usr/bin/mysql &> /dev/null

if [[ $? == 0 ]] ; then
	mysql --version
else
	echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]MySQL no está instalado en el sistema"
fi
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Softwares interesantes
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Softwares críticos e importantes: "
echo "$(tput setaf 2)"
which nc 2> /dev/null
which netcat 2> /dev/null
which nmap 2> /dev/null
which gcc 2> /dev/null
which curl 2> /dev/null
which python 2> /dev/null
which python2.7 2> /dev/null
which python3 2> /dev/null
which wget 2> /dev/null
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Información del usuario
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Información del usuario: "
echo "$(tput setaf 2)"

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Visualizando bashrc de usuario actual: "
echo "$(tput setaf 2)"

cat ~/.bashrc 2> /dev/null
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Visualizando .profile de usuario actual: "
echo "$(tput setaf 2)"

cat ~/.profile 2> /dev/null
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Visualizando /var/mail/root: "
echo "$(tput setaf 2)"

cat /var/mail/root 2> /dev/null
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Visualizando /var/spool/mail/root: "
echo "$(tput setaf 2)"

cat /var/spool/mail/root 2> /dev/null
echo " "
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "



#Posibilidad de leer historial
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Historial del usuario: "
echo "$(tput setaf 2)"

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Historiales disponibles del usuario actual: "
echo "$(tput setaf 2)"

ls -la ~/.*_history 2>/dev/null
echo " "
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Listando de forma recursiva el /home/: "
echo "$(tput setaf 2)"

ls -ahlR /home/
echo " "
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Visualizando .bash_history de usuario actual: "
echo "$(tput setaf 2)"

cat ~/.bash_history 2> /dev/null
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Visualizando -nano_history de usuario actual: "
echo "$(tput setaf 2)"

cat ~/.nano_history 2> /dev/null
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Visualizando .aftp_history de usuario actual: "
echo "$(tput setaf 2)"

cat ~/.atftp_history 2> /dev/null
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Visualizando .mysql_history de usuario actual: "
echo "$(tput setaf 2)"

cat ~/.mysql_history 2> /dev/null
echo " "

echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]Visualizando .php_history de usuario actual: "
echo "$(tput setaf 2)"

cat ~/.php_history 2> /dev/null
echo " "
echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Historial de root: "
echo "$(tput setaf 2)"

ls -la /root/.*_history &>/dev/null

if [[ $? == 0 ]] ; then
	ls -la /root/.*_history
	echo " "
	echo " "
	ls -ahlR /root/
else
	echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Inaccesible."
fi
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "

#Archivos de Dockers
sleep 1.5

echo "$(tput setaf 6)[$(tput setaf 1)*$(tput setaf 6)]Archivos de Dockers: "
echo "$(tput setaf 2)"
find / . -iname "docker*" 2> /dev/null
echo "$(tput setaf 8) "
echo "___________________________________________________"
echo " "
echo " "
echo "$(tput setaf 3)[$(tput setaf 1)*$(tput setaf 3)]$(tput setaf 6)Completado"
echo " "

#---Fin del Script---#
